name: Build and Package Rust cx-qt App

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Setup Qt
        uses: jurplel/setup-qt@c6c7281365daef91a238e1c2ddce4eaa94a2991d
        with:
          version: 6.8.2
          host: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'macos' || 'linux' }}

      - name: Build Release
        run: cargo build -p app --release

      - name: Package for Linux
        if: runner.os == 'Linux'
        run: |
          cargo install cargo-deb --version 1.45.0 || true
          cargo deb --no-strip
          mkdir -p installer
          cp target/debian/*.deb installer/

      - name: Package for macOS
        if: runner.os == 'macos'
        run: |
          cargo install cargo-bundle || true
          cargo bundle --release
          mkdir -p installer
          cp target/release/bundle/*.dmg installer/

      - name: Package for Windows
        if: runner.os == 'Windows'
        run: |
          mkdir installer
          powershell Compress-Archive -Path target\release\*.exe -DestinationPath installer\app.zip

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v2
        with:
          name: installer-${{ runner.os }}
          path: installer/
